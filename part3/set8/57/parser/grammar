//%default-actions quiet
// %class-name Parser
%filenames parser
%scanner ../scanner/scanner.h
%token-path ../scanner/tokens.h
//%baseclass-preinclude      x.h or <x.h>

//    Semantic values used by the parser.
//    Two often used types are predefined, extend or alter as seems fit.
//    When %union is not used, use:
//%stype   struct-name/class-name
//%union
//{ 
//      //  define union fields here. The fields shown are for demo-use only
//    int          i;
//    unsigned     u;
//    std::string *s;%token
//};
//  Typed nonterminals indicate the union-value that's returned:
//%type<i>
//    rule1 or TOKEN
//    rule2

// lowest precedence
%token WRITE IDENT NUMBER

//%nonassoc
//%left
//%right
// highest precedence

%%
//  Define the start-rule below (the name `startrule' may be altered)

startrule:
    write_stmt
|
    // empty
;

write_stmt:
    write body ';'
;

write:
    WRITE
;

body:
    '(' var_list ')'
;

var_list:
    var_list ',' var_name
|
    var_name
;

var_name:
    IDENT
|
    NUMBER
;




